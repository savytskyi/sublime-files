<snippet>
	<content><![CDATA[
# UICollectionView DataSource
def numberOfSectionsInCollectionView(collectionView)
  ${1:@data}.count
end

def collectionView(collectionView, numberOfItemsInSection: section)
  ${1:@data}[section][:cells].count
end

def collectionView(collectionView, cellForItemAtIndexPath: index)
  cell = collectionView.dequeueReusableCellWithReuseIdentifier(@collection_reuse_id,
    forIndexPath:index
  )
  item = ${1:@data}[index.section][:cells][index.row]

  cell
end

def collectionView(collectionView, didSelectItemAtIndexPath: index)
  cell = ${2:@collection}.cellForItemAtIndexPath index
  item = ${1:@data}[index.section][:cells][index.row]
end

# UICollectionViewFlowLayout Delegate

# def collectionView(collectionView, layout: collectionViewLayout, sizeForItemAtIndexPath: index)
#     [50, 50]
# end

# def scrollViewDidEndDecelerating(scrollView)
# end
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>snip_collection_view_methods</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.ruby</scope>
</snippet>
