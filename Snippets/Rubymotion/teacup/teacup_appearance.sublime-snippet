<snippet>
	<content><![CDATA[
Teacup::Appearance.new do
	# Don't forget to add this to app_delegate:on_load
	# Teacup::Appearance.apply

  # style UINavigationBar,
  #   backgroundColor: 0xtext_shadow_color.uicolor
  #   shadowImage: 'image/path'uiimage,
  #   barTintColor: 0xffffff.uicolor,
  #   tintColor: 0xffffff.uicolor,
  #   titleTextAttributes: {
  #     UITextAttributeFont => "HelveticaNeue".uifont(14),
  #     UITextAttributeTextShadowColor => 0x000000.uicolor,
  #     UITextAttributeTextColor => 0xffffff.uicolor,
  #   }

  # style UIBarButtonItem,
  #   backgroundColor: 0xffffff.uicolor
  #   tintColor: 0xffffff.uicolor,
  #   titleTextAttributes: {
  #     UITextAttributeFont => "HelveticaNeue".uifont(14),
  #     UITextAttributeTextShadowColor => 0x000000.uicolor,
  #     UITextAttributeTextColor => 0xffffff.uicolor,
  #   }

  # style UISegmentedControl,
  #   backgroundColor: COLOR_LIGHT_GREY.uicolor,
  #   tintColor: COLOR_DARK_GREY.uicolor,
  #   selectedSegmentIndex: 0,
  #   segmentedControlStyle: UISegmentedControlStyleBar

  # style UISearchBar,
  #   backgroundColor: 0x${1:text_shadow_color}.uicolor
  #   shadowImage: ''.uiimage,
  #   backgroundImage: ''.uiimage,
  #   tintColor: 0xffffff.uicolor,
  #   titleTextAttributes: {
  #   	UITextAttributeFont => "HelveticaNeue".uifont(14),
  #     UITextAttributeTextShadowColor => 0x${6:text_shadow_color}.uicolor,
  #     UITextAttributeTextColor => 0x${7:text_shadow_color}.uicolor,
  #   }

  # style UISwitch,
  #   onTintColor: COLOR_LIGHT_GREY.uicolor


  # UINavigationBar.appearanceWhenContainedIn(UINavigationBar, nil).setTintColor(UIColor.blackColor)
  # style UIBarButtonItem, when_contained_in: UINavigationBar,
  # 	tintColor: UIColor.blackColor

  # UINavigationBar.appearanceWhenContainedIn(UIToolbar, UIPopoverController, nil).setTintColor(UIColor.blackColor)
  # style UIBarButtonItem, when_contained_in: [UIToolbar, UIPopoverController],
  # 	tintColor: UIColor.blackColor

end
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>snip_teacup_init_appearance</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.ruby</scope>
</snippet>